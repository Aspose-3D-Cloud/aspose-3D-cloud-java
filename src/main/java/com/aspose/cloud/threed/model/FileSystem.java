/*
 * Aspose.ThreeD Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.threed.model;

import java.util.Objects;
import com.aspose.cloud.threed.model.FileSystemType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FileSystemType in Aspose.3D.Cloud
 */
@ApiModel(description = "FileSystemType in Aspose.3D.Cloud")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-14T15:01:31.292+08:00")
public class FileSystem {
  @SerializedName("FileSystemType")
  private FileSystemType fileSystemType = null;

  @SerializedName("Directory")
  private String directory = null;

  public FileSystem fileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
    return this;
  }

   /**
   * Gets or sets  of the FileSystem Type.
   * @return fileSystemType
  **/
  @ApiModelProperty(required = true, value = "Gets or sets  of the FileSystem Type.")
  public FileSystemType getFileSystemType() {
    return fileSystemType;
  }

  public void setFileSystemType(FileSystemType fileSystemType) {
    this.fileSystemType = fileSystemType;
  }

  public FileSystem directory(String directory) {
    this.directory = directory;
    return this;
  }

   /**
   * path to construct FileSystem 
   * @return directory
  **/
  @ApiModelProperty(value = "path to construct FileSystem ")
  public String getDirectory() {
    return directory;
  }

  public void setDirectory(String directory) {
    this.directory = directory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileSystem fileSystem = (FileSystem) o;
    return Objects.equals(this.fileSystemType, fileSystem.fileSystemType) &&
        Objects.equals(this.directory, fileSystem.directory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSystemType, directory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileSystem {\n");
    
    sb.append("    fileSystemType: ").append(toIndentedString(fileSystemType)).append("\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

